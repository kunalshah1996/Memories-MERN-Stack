{"ast":null,"code":"var _jsxFileName = \"/Users/KunalShah/Desktop/Projects/Memories Project/client/src/components/Forms/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from \"react-redux\";\nimport { createPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"Message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.Message,\n        onChange: e => setPostData({ ...postData,\n          Message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileInput\",\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"26byTSER+RqTE+8mgPkXNE2xTpw=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/KunalShah/Desktop/Projects/Memories Project/client/src/components/Forms/Form.js"],"names":["React","useState","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","createPost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","updatePost","clear","paper","root","form","target","value","Message","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useStyles from './styles'\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from \"react-redux\";\nimport { createPost } from '../../actions/posts'\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    });\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (currentId) {\n            dispatch(updatePost(currentId, postData));\n        }\n        else {\n\n            dispatch(createPost(postData));\n        }\n    }\n\n    const clear = () => {\n\n    };\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a Memory</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator}\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })}></TextField>\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title}\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}></TextField>\n                <TextField name=\"Message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.Message}\n                    onChange={(e) => setPostData({ ...postData, Message: e.target.value })}></TextField>\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags}\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value })}></TextField>\n                <div className=\"fileInput\">\n                    <FileBase type='file' multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}  ></FileBase>\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth >Submit</Button>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper >\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}