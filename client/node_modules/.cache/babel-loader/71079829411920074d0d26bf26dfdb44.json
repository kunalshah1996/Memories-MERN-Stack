{"ast":null,"code":"var _jsxFileName = \"/Users/KunalShah/Desktop/Projects/Memories Project/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUp = () => {\n  _s();\n\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"90359569236-6hf0se99735i2pmeu5i4c1k34ilijbrj.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 169\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleError,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"sqviBE7TpeQ3ReVQFngddU0d8gM=\", false, function () {\n  return [useDispatch, useNavigate, useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/KunalShah/Desktop/Projects/Memories Project/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useNavigate","GoogleLogin","LockOutlinedIcon","Icon","signin","signup","AUTH","useStyles","Input","initialState","firstName","lastName","email","password","confirmPassword","SignUp","form","setForm","isSignup","setIsSignup","dispatch","history","classes","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignup","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleError","alert","handleChange","target","name","value","paper","avatar","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n    const [form, setForm] = useState(initialState);\n    const [isSignup, setIsSignup] = useState(false);\n    const dispatch = useDispatch();\n    const history = useNavigate();\n    const classes = useStyles();\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleShowPassword = () => setShowPassword(!showPassword);\n\n    const switchMode = () => {\n        setForm(initialState);\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        setShowPassword(false);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (isSignup) {\n            dispatch(signup(form, history));\n        } else {\n            dispatch(signin(form, history));\n        }\n    };\n\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n\n        try {\n            dispatch({ type: AUTH, data: { result, token } });\n\n            history('/');\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">{isSignup ? 'Sign up' : 'Sign in'}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        {isSignup ? 'Sign Up' : 'Sign In'}\n                    </Button>\n                    <GoogleLogin\n                        clientId=\"90359569236-6hf0se99735i2pmeu5i4c1k34ilijbrj.apps.googleusercontent.com\"\n                        render={(renderProps) => (\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleError}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}