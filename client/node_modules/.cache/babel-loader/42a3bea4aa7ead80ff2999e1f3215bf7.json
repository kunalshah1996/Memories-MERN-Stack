{"ast":null,"code":"var _jsxFileName = \"/Users/KunalShah/Desktop/Projects/Memories Project/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avata, Button, Paper, Grid, Typography, Container, Avatar, TextField } from '@material-ui/core';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const googleSuccess = async res => {\n    console.log(res);\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign in was unsucessful\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Pasword\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmpassword\",\n            label: \"Confirm Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? \"Sign Up\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"90359569236-6hf0se99735i2pmeu5i4c1k34ilijbrj.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 36\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 143\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"thvx19+oPNv8Mr7p6X+onHckTcM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/KunalShah/Desktop/Projects/Memories Project/client/src/components/Auth/Auth.js"],"names":["React","useState","Avata","Button","Paper","Grid","Typography","Container","Avatar","TextField","useStyles","LockOutlinedIcon","Input","GoogleLogin","Icon","Auth","classes","isSignup","setIsSignup","showPassword","setShowPassword","switchMode","prevIsSignup","handleShowPassword","prevShowPassword","handleSubmit","handleChange","googleSuccess","res","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Avata, Button, Paper, Grid, Typography, Container, Avatar, TextField } from '@material-ui/core';\nimport useStyles from './styles'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './icon';\n\nconst Auth = () => {\n    const classes = useStyles();\n    const [isSignup, setIsSignup] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        handleShowPassword(false);\n    }\n    const handleShowPassword = () => {\n        setShowPassword((prevShowPassword) => !prevShowPassword);\n    }\n    const handleSubmit = () => {\n\n    };\n    const handleChange = () => {\n\n    };\n\n    const googleSuccess = async (res) => {\n        console.log(res);\n    };\n    const googleFailure = () => {\n        console.log(\"Google Sign in was unsucessful\");\n    };\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon></LockOutlinedIcon>\n                </Avatar>\n                <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {\n                            isSignup && (\n                                <>\n\n                                    <Input name='firstName' label=\"First Name\" handleChange={handleChange} autoFocus half />\n\n                                    <Input name='lastName' label=\"Last Name\" handleChange={handleChange} autoFocus half />\n                                </>\n                            )\n                        }\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                        <Input name=\"password\" label=\"Pasword\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                        {isSignup &&\n                            <Input name=\"confirmpassword\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\" />\n                        }\n                    </Grid>\n                    <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit} >\n                        {isSignup ? \"Sign Up\" : \"Sign In\"}\n                    </Button>\n                    <GoogleLogin clientId='90359569236-6hf0se99735i2pmeu5i4c1k34ilijbrj.apps.googleusercontent.com' render={(renderProps) => (<Button\n                        className={classes.googleButton} color='primary'\n                        fullWidth\n                        onClick={renderProps.onClick}\n                        disabled={renderProps.disabled}\n                        startIcon={<Icon />} variant='contained'>\n                        Google Sign In\n                    </Button>)} onSuccess={googleSuccess} onFailure={googleFailure} cookiePolicy='single_host_origin' />\n                    <Grid container justifyContent='flex-end' >\n                        <Grid item>\n                            <Button onClick={switchMode}>{isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                </form>\n            </Paper>\n\n        </Container >\n    );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}